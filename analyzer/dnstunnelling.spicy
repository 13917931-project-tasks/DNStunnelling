# TODO: Define your analyzer here.

module dnstunnelling;

public type dnstun_unit = unit {
    id: Dns_Id;
    flags: Flags;
    payload: bytes &eod;

    #switch ( self.flags.flags_a ){
    #  b"\x9e" -> rrp: ReadResponse;
    #};

    #on %done { print self;} 
    	
} &convert=self.flags.flags_data.to_int();

public type ReadResponse = unit {
   
    questions: Questions;
    an_rrs: Answer_RRs;
    auth_rrs: Authority_RRs;
    q_a: QueriesAdditional_records;

};

public type Dns_Id = unit {
    id_data: bytes &size=2;
    #id_data: bytes &until=b"\x00";
    on %done {print "Id's: %s" % self; }
};

public type Flags = unit {
    #flags_a: bytes &size=1;
    #flags_b: bytes &size=2 if (self.flags_a == b"\x9e");
    #flags_c: bytes &size=1 if (self.flags_a != b"\x9e");
    flags_data: bytes &size=2;
    on %done { print "Flags: %s" % self; }
};

public type Questions = unit {
     data: bytes &size=2;
};

public type Answer_RRs = unit {
    data: bytes &size=2;
};

public type Authority_RRs = unit {
    data: bytes &size=2;
};

public type QueriesAdditional_records = unit {
    payload: bytes &eod;
};


